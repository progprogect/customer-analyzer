# Logstash pipeline для обработки логов Customer Analyzer

input {
  # Backend logs
  file {
    path => "/var/log/backend/*.log"
    type => "backend"
    codec => "json"
    start_position => "beginning"
  }
  
  # ML Services logs
  file {
    path => "/var/log/ml/*.log"
    type => "ml-services"
    codec => "json"
    start_position => "beginning"
  }
  
  # Nginx logs
  file {
    path => "/var/log/nginx/*.log"
    type => "nginx"
    start_position => "beginning"
  }
  
  # System logs
  file {
    path => "/var/log/syslog"
    type => "system"
    start_position => "beginning"
  }
}

filter {
  if [type] == "backend" {
    # Обработка Backend логов
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} \[%{WORD:level}\] %{GREEDYDATA:message}" }
    }
    
    date {
      match => [ "timestamp", "ISO8601" ]
    }
    
    if [level] == "ERROR" {
      mutate {
        add_tag => [ "error" ]
      }
    }
  }
  
  if [type] == "ml-services" {
    # Обработка ML Services логов
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} - %{WORD:level} - %{GREEDYDATA:message}" }
    }
    
    date {
      match => [ "timestamp", "ISO8601" ]
    }
  }
  
  if [type] == "nginx" {
    # Обработка Nginx логов
    grok {
      match => { "message" => "%{NGINXACCESS}" }
    }
    
    date {
      match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
    }
    
    if [response] >= 400 {
      mutate {
        add_tag => [ "http_error" ]
      }
    }
  }
  
  # Общие фильтры
  mutate {
    add_field => { "service" => "%{type}" }
    add_field => { "environment" => "production" }
  }
}

output {
  # Отправка в Elasticsearch
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "customer-analyzer-logs-%{+YYYY.MM.dd}"
    template_name => "customer-analyzer-logs"
    template_pattern => "customer-analyzer-logs-*"
    template => {
      "index_patterns" => ["customer-analyzer-logs-*"]
      "settings" => {
        "number_of_shards" => 1
        "number_of_replicas" => 0
      }
      "mappings" => {
        "properties" => {
          "@timestamp" => { "type" => "date" }
          "level" => { "type" => "keyword" }
          "message" => { "type" => "text" }
          "service" => { "type" => "keyword" }
          "environment" => { "type" => "keyword" }
          "response" => { "type" => "integer" }
          "method" => { "type" => "keyword" }
          "path" => { "type" => "keyword" }
        }
      }
    }
  }
  
  # Отправка ошибок в отдельный индекс
  if "error" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "customer-analyzer-errors-%{+YYYY.MM.dd}"
    }
  }
}
